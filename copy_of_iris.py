# -*- coding: utf-8 -*-
"""Copy of Iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dlDCulnswB2jy8jJWTDCk7Ih-yl2YeB9
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

from sklearn.datasets import load_iris
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv("/content/Iris.csv")

df.head()

df["Species"].value_counts()

# Removing the ID column
df = df.iloc[:,1:]

df.head()

sns.FacetGrid(df, hue="Species",height=6).map(plt.scatter,"PetalLengthCm", "SepalWidthCm").add_legend()

# Converting the Species columns(categorical data) in term of numerical data
encoder = LabelEncoder()

df['Species'] = encoder.fit_transform(df['Species'])

df.head()

# Splitting the data into X =& Y
X = df.drop('Species',axis =1).values
X.shape

y =df["Species"].values
y.shape

from sklearn.model_selection import train_test_split
# Splitting the data into training and testing
X_train, X_test,y_train,y_test = train_test_split(X,y,test_size =0.2,random_state=42)

X_train.shape , y_train.shape

X_test.shape , y_test.shape

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()

lr = lr.fit(X_train,y_train) # Training the model

lr.score(X_train,y_train)

from sklearn.metrics import accuracy_score

y_pred =lr.predict(X_test) # Predicting the models output  on the test data
y_pred

y_test # The actual output of the test data

accuracy_score(y_test,y_pred) # Comparing both the predicting and the test data to get the accuracy of the model